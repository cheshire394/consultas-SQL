
--HOJA 11 CONSULTAS VARIADAS
--Conexión con usuario hr
--1. Nombres de los empleados con menor salario de todos los que trabajan en el departamento de ventas (‘Sales’).

SELECT E.FIRST_NAME 
FROM EMPLOYEES E
JOIN DEPARTMENT D ON D.DEPARTMENT_ID = E.DEPARTMENT_ID --PARA SACAR EL NOMBRE DEL DEPARTAMENTO
WHERE UPPER(DEPARTMENT_NAME) = 'SALES';

--2. Nombres de países que se encuentran en la región de ‘Asia’.
--RESULTADOS CORRECTOS
SELECT COUNTRY_ID, COUNTRY_NAME, R.REGION_NAME
FROM COUNTRIES C
JOIN REGIONS R ON R.REGION_ID = C.REGION_ID --JOIN PARA SACAR EL NOMBRE DE LAS REGIONES
WHERE UPPER(REGION_NAME) = 'ASIA';


--3. Nombres de departamentos donde trabaja algún empleado que no cobra comisión.
--RESULTADOS CORRECTOS
SELECT DISTINCT DEPARTMENT_NAME
FROM DEPARTMENTS D
JOIN EMPLOYEES E ON D.DEPARTMENT_ID = E.DEPARTMENT_ID
WHERE (E.COMMISSION_PCT) IS NULL; 


--4. Toda la información de localidades (LOCATIONS) que se encuentran en Japón (‘Japan’) y Canadá (‘Canada’).
--RESULTADOS CORRECTOS
SELECT * 
FROM LOCATIONS L
JOIN COUNTRIES C ON C.COUNTRY_ID = L.COUNTRY_ID
WHERE UPPER(C.COUNTRY_NAME) IN ('JAPAN','CANADA');

--5. Nombres y apellidos de los empleados que no trabajan en Europa (‘Europe’).
--RESULTADOS COMPROBADOS
SELECT E.FIRST_NAME, E.LAST_NAME
FROM EMPLOYEES E
JOIN DEPARTMENTS D ON D.DEPARTMENT_ID = E.DEPARTMENT_ID --
JOIN LOCATIONS L ON L.LOCATION_ID = D.LOCATION_ID
JOIN COUNTRIES C ON L.COUNTRY_ID = C.COUNTRY_ID 
JOIN REGIONS R ON R.REGION_ID = C.REGION_ID --(ID 2,3,4)
WHERE UPPER(R.REGION_NAME) <> 'EUROPE';

--6. ¿Cuántos empleados trabajan en departamentos de ventas (‘Sales’)?
--RESULTADOS COMPROBADOS
SELECT COUNT(*) AS EMPLEADOS_SALES
FROM EMPLOYEES E
JOIN DEPARTMENTS D ON D.DEPARTMENT_ID = E.DEPARTMENT_ID
WHERE UPPER(DEPARTMENT_NAME) = 'SALES'


--7. ¿Cuántos empleados trabajan en Londres (‘London’)?
--RESULTADOS COMPROBADOS
SELECT COUNT(*) AS EMPLEADOS_LONDRES
FROM EMPLOYEES E
JOIN DEPARTMENTS D ON D.DEPARTMENT_ID = E.DEPARTMENT_ID 
JOIN LOCATIONS L ON L.LOCATION_ID = D.LOCATION_ID
WHERE UPPER(CITY) = 'LONDON';


--8. Nombres de gerentes de ventas (‘Sales Manager’) que trabajen en ‘Oxford’.
--RESULTADOS CORRECTOS
SELECT FIRST_NAME "GERENTES VENTAS", L.CITY, J.JOB_TITLE 
FROM EMPLOYEES E
JOIN JOBS J ON J.JOB_ID = E.JOB_ID-- JOIN PARA SALES MANAGER
--JOINS PARA SACAR A OXFORD-->
JOIN DEPARTMENTS D ON D.DEPARTMENT_ID = E.DEPARTMENT_ID --EN DEPARTAMENTOS ESTA LOCATION_ID QUE CONTIENE EL NOMBRE DE CIUDADES 
JOIN LOCATIONS L ON D.LOCATION_ID = L.LOCATION_ID-- SACAMOS EL NOMBRE DE LA CIUDAD 
WHERE UPPER(J.JOB_TITLE) = 'SALES MANAGER' AND  UPPER(L.CITY) = 'OXFORD';

--9. Nombre del departamento con mayor número de empleados.
--NO ME SALE MUY DIFICIL
SELECT D.DEPARTMENT_NAME "DEPART MAS EMPLE"
FROM DEPARTMENTS D
JOIN EMPLOYEES E ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
GROUP BY   D.DEPARTMENT_NAME HAVING EMPLOYEE_ID = (SELECT DEPARTMENT_NAME FROM DEPARTMENTS JOIN EMPLOYEES E ON E.DEPARTMENT_ID = D.DEPARTMENT_ID GROUP BY DEPARTMENT_ID HAVING MAX(COUNT(EMPLOYEE_ID)));

--SOLUCCION CLASE
SELECT D.DEPARTMENT_NAME
FROM EMPLOYEES E
JOIN DEPARTMENTS D ON D.DEPARTMENT_ID = E.DEPARTMENT_ID
GROUP BY D.DEPARTMENT_NAME 
HAVING COUNT(*) = (SELECT MAX(COUNT(*)) FROM EMPLOYEES E GROUP BY E.DEPARTMENT_ID); 

--SOLUCION GPT
SELECT D.DEPARTMENT_NAME AS "DEPART MAS EMPLE"
FROM DEPARTMENTS D
JOIN EMPLOYEES E ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
GROUP BY D.DEPARTMENT_ID, D.DEPARTMENT_NAME
HAVING COUNT(E.EMPLOYEE_ID) = (SELECT MAX(COUNT(EMPLOYEE_ID)) 
                               FROM EMPLOYEES 
                               GROUP BY DEPARTMENT_ID);

--10. Nombre de la ciudad (CITY) donde se encuentra el departamento con mayor número de empleados.
-- MUY DIFICIL , ME AYUDA GPT 

SELECT CITY "MAYOR NUMERO DE EMPLEADOS"
FROM LOCATIONS L
JOIN DEPARTMENTS D ON D.LOCATION_ID = L.LOCATION_ID-- JOIN INTERMENDIO PARA LLEGAR A DEPARTAMENTOS QUE CONECTA CON EMPLEADOS
JOIN EMPLOYEES E ON E.DEPARTMENT_ID = D.DEPARTMENT_ID --JOIN PARA CONECTAR EL NUMERO DE EMPLEADOS
GROUP BY D.DEPARTMENT_ID HAVING COUNT(EMPLOYEE_ID)= (SELECT MAX(COUNT(EMPLOYEE_ID)) FROM EMPLOYEES GROUP BY DEPARTMENT_ID);

--SOLUCICON GPT (ESTA FUNCIONA COINCIDE CON NO SE QUE ES LO QUE MAS TIENE)
SELECT L.CITY AS "MAYOR NUMERO DE EMPLEADOS"
FROM LOCATIONS L
JOIN DEPARTMENTS D ON D.LOCATION_ID = L.LOCATION_ID
JOIN EMPLOYEES E ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
GROUP BY L.LOCATION_ID, L.CITY
HAVING COUNT(E.EMPLOYEE_ID) = (SELECT MAX(COUNT(EMPLOYEE_ID)) 
                               FROM EMPLOYEES 
                               GROUP BY DEPARTMENT_ID);
                               
SELECT CITY
FROM LOCATIONS L 
JOIN DEPARTMENTS D ON D.LOCATION_ID = L.LOCATION_ID
AND DEPARTMENT_ID IN (SELECT DEPARTMENT_ID
                    FROM EMPLOYEES E
                    GROUP BY DEPARTMENT_ID HAVING COUNT(*) = (SELECT MAX(COUNT(*)) FROM EMPLOYEES GROUP BY DEPARTMENT_ID)); 
                               

--11. Muestra el nombre de los empleados cuyo salario es superior al salario medio en su propio departamento.(NO HACER AUN)


--12. ¿A cuántos empleados dirige ‘Neena Kochhar’? --tiene que retornar 5 resultados
--RESULTADOS CORRECTOS, DIFICULTAD MEDIA
SELECT COUNT(*) AS NUMERO_EMPLE
FROM EMPLOYEES E
WHERE MANAGER_ID = (SELECT EMPLOYEE_ID FROM EMPLOYEES WHERE UPPER(FIRST_NAME) = 'NEENA' AND UPPER(LAST_NAME) = 'KOCHHAR');

--13. Nombres de departamentos cuya suma de salarios de empleados supere los 50.000 dólares.
--RESULTADOS CORRECTOS, DIFICULTAD MEDIA
SELECT D.DEPARTMENT_NAME , SUM(SALARY) AS TOTAL_SALARIO
FROM DEPARTMENTS D
JOIN EMPLOYEES E ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
GROUP BY D.DEPARTMENT_NAME HAVING SUM(E.SALARY)> 50000;


--14. Nombre de los empleados que trabajan en la región de Europa (‘Europe’).
--RESULTADOS COMPROBADOS
SELECT FIRST_NAME, R.REGION_NAME
FROM EMPLOYEES E
JOIN DEPARTMENTS D ON D.DEPARTMENT_ID = E.DEPARTMENT_ID --JOIN INTERMEDIO PARA LLEGAR LOCATIONS (DONDE ESTA ID COUNTRY)
JOIN LOCATIONS L ON L.LOCATION_ID = D.LOCATION_ID  --JOIN PARA LLEGAR A COUNTRY
JOIN COUNTRIES C ON C.COUNTRY_ID = L.COUNTRY_ID ---JOIN PARA LLEGAR A REGIONS
JOIN REGIONS R ON R.REGION_ID = C.REGION_ID --LLEGAMOS EUROPA
WHERE UPPER(R.REGION_NAME) = 'EUROPE'; 


--15. Nombre del o de los empleados que más cobran y que son programadores (‘Programmer’). 
--SON 5 PROGRAMADORES EN TOTAL, 
--NO SE RESOLVER
--entediste mal la consulta, solo te pide el que más cobra por lo tanto esta bien , peror repasala porque codigo esta pensado para sacar os que mas no el que mas
--LA MEDIA DE SALARIO DE PROGRAMACION ES DE 5760., ALEXANDER Y BRUCE SUPERAN LA MEDIA, PERO SOLO ME SALE ALEXANDER
SELECT E.FIRST_NAME, J.JOB_TITLE, E.SALARY
FROM EMPLOYEES E 
JOIN JOBS J ON J.JOB_ID = E.JOB_ID
WHERE UPPER(JOB_TITLE) = 'PROGRAMMER'
GROUP BY  E.FIRST_NAME, J.JOB_TITLE, E.SALARY HAVING AVG(SALARY) > (SELECT AVG(SALARY) FROM EMPLOYEES E WHERE UPPER(JOB_TITLE) = 'PROGRAMMER');

 

--16. Nombre de los empleados del departamento de ventas (‘Sales’) que tienen un salario superior que cualquiera de los salarios de los trabajadores del departamento de
--contabilidad (‘Accounting’).
--DIFICIL
--LA DIFICULTAD DE ESRA QUERY ES QUE > = Y ESTE TIPO DE OPERADORES SOLO ADMITEN QUE SE RETORNE UN ÚNICO VALOR, DE TAL MANERA QUE NECESITAMOS QUE LA SUBCONSULTA
--SELECCIONE SOLO EL EMPLEADO QUE MAS COBRA, Y A RAIZ DE ESE LOS COMPARE CON EL RESTO.
SELECT E.FIRST_NAME, D.DEPARTMENT_NAME
FROM EMPLOYEES E
JOIN DEPARTMENTS D ON D.DEPARTMENT_ID = E.DEPARTMENT_ID
WHERE UPPER(D.DEPARTMENT_NAME)= 'SALES' AND SALARY > (SELECT MAX(SALARY) FROM EMPLOYEES E JOIN DEPARTMENTS D ON D.DEPARTMENT_ID = E.DEPARTMENT_ID WHERE UPPER(D.DEPARTMENT_NAME) = 'ACCOUNTING'); 



--17. Códigos de departamentos cuyo número de empleados coincida con el número de empleados del departamento 30.
--RESULTADOS COMPROBADOS, SON 6 EMPLEADOS EN EL DEPARTMENTO 30, DIFICULTAD MEDIA, es el deparment 100

SELECT DEPARTMENT_ID, COUNT(EMPLOYEE_ID)
FROM EMPLOYEES 
GROUP BY DEPARTMENT_ID HAVING COUNT(EMPLOYEE_ID) = (SELECT COUNT(EMPLOYEE_ID) FROM EMPLOYEES E  WHERE DEPARTMENT_ID = 30); 

--NO HACER AUN 
--18. Muestra el código de departamento junto al nombre y apellido del empleado más antiguo de dicho departamento.



