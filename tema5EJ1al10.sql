Ejercicio 1
Crea la tabla provincias con los siguientes campos:
• Cod_provi de tipo number(2) y es la clave primaria
• Nombre de tipo varchar2(25), es obligatorio
• Pais de tipo varchar2(25) debe ser uno de los siguientes España,
Portugal o Italia

CREATE TABLE PROVINCIAS(
COD_PROVI NUMBER(2) PRIMARY KEY,
NOMBRE VARCHAR2(25) NOT NULL,
PAIS VARCHAR2(25),
CONSTRAINT CK_COUNTRIES CHECK(PAIS IN('ESPAÑA','PORTUGAL','ITALIA'))
);


Ejercicio 2
Crea la tabla empresas con los siguientes campos:
• Cod_empre number(2) es la clave
• Nombre varchar2(25) obligatorio por defecto será empresa1
• Fecha_crea de tipo fecha por defecto será un dia posterior a la fecha
actual.



--default tiene que ir delante de not null para que compile
CREATE TABLE EMPRESAS(
COD_EMPRE NUMBER(2) PRIMARY KEY,
NOMBRE VARCHAR2(25) default 'empresa1' NOT NULL,
FECHA_CREA DATE DEFAULT SYSDATE + 1
);


Ejercicio 5
Crea la tabla empleados con los siguientes campos
• Cod_emple number(2) y es clave
• Nombre cadena de caracteres de longitud máxima 20 y es obligatorio
• Apellido cadena de caracteres de longitud máxima 25
• Salario número de 7 cifras con dos decimales debe ser mayor que 0
Además tiene dos campos que son claves ajenas de las tablas provincias y
empresas respectivamente, para la clave ajena de provincias indicaremos un
borrado en cascada


CREATE TABLE EMPLEADOS(
COD_EMPLE NUMBER(2) PRIMARY KEY,
NOMBRE VARCHAR2(20) NOT NULL,
APELLIDO VARCHAR2(25),
SALARIO NUMBER(7,2),
COD_PROVI NUMBER(2),
COD_EMPRE NUMBER(2),


CONSTRAINT CK_SALARIO CHECK(SALARIO> 0),
CONSTRAINT FK_EMPLE_PROVI FOREIGN KEY(COD_PROVI) REFERENCES PROVINCIAS(COD_PROVI) ON DELETE CASCADE,
CONSTRAINT FK_EMPLE_EMPRE FOREIGN KEY(COD_EMPRE) REFERENCES EMPRESAS(COD_EMPRE)
);

Ejercicio 6
Crea la tabla provincias y personas con las siguiente estructura, en negrita la
clave principal y codprovin referencia a cod_provincia. Además pondremos la
opción de BORRADO EN CASCADA

CREATE TABLE PROVINCIAS2 (
COD_PROVINCIA NUMBER(2) PRIMARY KEY,
NOM_PROVINCIA VARCHAR2(10)
);

CREATE TABLE PERSONAS(
DNI VARCHAR2(10) PRIMARY KEY,
NOMBRE VARCHAR2(10),
DIRECCION VARCHAR2(20),
POBLACION VARCHAR2(10),
COD_PROVIN NUMBER(2),

CONSTRAINT FK_PEOPLE_PROVI FOREIGN KEY(COD_PROVIN) REFERENCES PROVINCIAS2(COD_PROVINCIA) ON DELETE CASCADE,
CONSTRAINT CK_DNI_FORMAT CHECK(LENGTH(DNI) = 10 AND SUBSTR(DNI, 1, 8) BETWEEN '00000000' AND '99999999' AND SUBSTR(DNI, 9, 1) = '-' AND
SUBSTR(DNI,-1) BETWEEN 'A' AND 'Z')
);


Ejercicio 7
Crear la tabla EJEMPLO3 cuyas columnas y restricciones son las
siguientes:
• DNI VARCHAR2(10)
• NOMBRE VARCHAR2(30)
• EDAD NUMBER(2)
• CURSO NUMBER

Restricciones:
- El DNI no puede ser nulo
- La clave principal es le DNI
- La EDAD ha de estar comprendida entre 5 y 20 años
- El NOMBRE ha de estar en mayúsculas
- El curso sólo puede almacenar 1,2 o 3


CREATE TABLE EJEMPLO3 (
  DNI VARCHAR2(10),
  NOMBRE VARCHAR2(30) CHECK(NOMBRE = UPPER(NOMBRE)),
  EDAD NUMBER(2) CHECK(EDAD BETWEEN 5 AND 20),
  CURSO NUMBER(1) CHECK(CURSO IN (1, 2, 3)),
  CONSTRAINT PK_EJEMPLO3 PRIMARY KEY (DNI),-- SI ES PRIMARY KEY NO PUEDE SER NULL
  CONSTRAINT CK_CURSO CHECK(CURSO IN (1, 2, 3))
);



Ejercicio 8
Crea las tablas siguientes con lo campos y restricciones:
ALUMNO
• Codigo number (2 )PK
• Nombre varchar2(25) obligatorio
MODULOS
• Codigo number PK
• Nombre varchar2(25)
NOTAS
• Cod_alumno number(2)
• Cod_modulo number debe estar en mayúsculas
• Nota number(2)
• (Cod-alumno, cod_modulo) es la clave primaria
• Nota ha de ser un número comprendido entre 0 y 10
• Debe además tener dos campos que hacen referencia a la tabla
MODULOS y ALUMNOS

CREATE TABLE ALUMNO(

COD_ALUMNO NUMBER(2) PRIMARY KEY,
NOMBRE VARCHAR2(25) NOT NULL
);

CREATE TABLE MODULOS(
COD_MODULO NUMBER PRIMARY KEY,
NOMBRE VARCHAR2(25)
);

--CUANDO EXISTE DOS CLAVES PRIMARIAS EN UNA TABLA ES OBLIGATORIO CREAR UNA CONSTRAINT, LO ROJO ESTARÍA MAL

CREATE TABLE NOTAS(
COD_ALUMNO NUMBER(2),--PRIMARY KEY
COD_MODULO NUMBER,--PRUMARY KEY QUE SON COMPUESTAS, OBLIGAN A CREAR CONSTRAINT
NOTA NUMBER(2),

CONSTRAINT PK_NOTAS PRIMARY KEY (COD_ALUMNO, COD_MODULO),

CONSTRAINT CK_COD_MOD CHECK(COD_MODULO = UPPER(COD_MODULO)),

CONSTRAINT CK_NOTA CHECK(NOTA BETWEEN 0 AND 10),

CONSTRAINT PK_MOD_NOTA FOREIGN KEY(COD_MODULO) REFERENCES 
MODULOS(COD_MODULO),

CONSTRAINT PK_NOTA_ALUM FOREIGN KEY(COD_ALUMNO) REFERENCES
ALUMNO(COD_ALUMNO));


Ejercicio 9
Crea las siguientes tablas de acuerdo con las restricciones que se
mencionan:
--SEGURAMENTE NO TE COMPILE PORQUE HACE REFERENCIA A TABLAS NO CREADAS


Tabla PEDIDOS
– La clave primaria está formada por las columnas: NIF, ARTICULO,
COD_FABRICANTE, PESO, CATEGORIA y FECHA_PEDIDO.
– COD_FABRICANTE es clave ajena que referencia a la tabla FABRICANTES.
– UNIDADES_PEDIDAS ha de ser > 0.
– CATEGORIA ha de ser 'Primera', 'Segunda' o 'Tercera'.
– Las columnas ARTICULO, COD_FABRICANTE, PESO y CATEGORIA son
clave ajena y referencian a la tabla ARTICULOS. Realiza un borrado en
cascada.
– NIF es clave ajena y referencia a la tabla TIENDAS.

CREATE TABLE PEDIDOS(
NIF VARCHAR2(10),
ARTICULO VARCHAR2(20),
COD_FABRICATE NUMBER(3),
PESO NUMBER(3),
CATEGORIA VARCHAR2(10),
FECHA_PEDIDO DATE,
UNIDADES_PEDIDAS NUMBER(4),

--EN ESTA RESTRICCIÓN FALLASTES EN QUE PUSISTE CADA CLAVE PRIMARIA CON UNA COMILLA SIMPLE, Y DEBEN DE IR SIN COMILLAS.

CONSTRAINT PK_PEDIDOS PRIMARY KEY( NIF, ARTICULO,COD_FABRICANTE, PESO, CATEGORIA, FECHA_PEDIDO),

CONSTRAINT FK_PEDIDOS_FABRICANTES FOREIGN KEY (COD_FABRICANTE) REFERENCES FABRICANTES(COD_FABRICANTES),

CONSTRAINT CK_UNIDADES_MIN CHECK(UNIDADES_PEDIDAS > 0),

CONSTRAINT CK_CATEGORIA_PEDIDOS CHECK(CATEGORIA IN('PRIMERA', 'SEGUNDA', 'TERCERA')),

--ESTO ES UN 0 AUNQUE COMPILE (POR EFICIENCIA DE CODIGO)

--CORRECCIÓN

CONSTRAINT  FK_PEDIDOS_ARTICULOS FOREIGN KEY(COD_FABRICANTE, ARTICULO, PESO, CATEGORIA) REFERENCES ARTICULOS(COD_FABRICANTE, ARTICULO, PESO, CATEGORIA)ON DELETE CASCADE,
-- ESTO ASI AUNQUE COMPILE ESTA MAL 

--CONSTRAINT FK_PEDIDOS_ARTICULOS_COD FOREIGN KEY (COD_FABRICATE) REFERENCES ARTICULOS(COD_FABRICATE) ON DELETE CASCADE,

--CONSTRAINT FK_PEDIDOS_ARTICULOS_ART FOREIGN KEY (ARTICULO) REFERENCES ARTICULOS(ARTICULO) ON DELETE CASCADE,

--CONSTRAINT FK_PEDIDOS_ARTICULOS_PESO FOREIGN KEY (PESO) REFERENCES ARTICULOS(PESO) ON DELETE CASCADE,

--CONSTRAINT FK_PEDIDOS_ARTICULOS_CATEGORIA FOREIGN KEY (CATEGORIA) REFERENCES ARTICULOS(CATEGORIA) ON DELETE CASCADE,

CONSTRAINT FK_PEDIDOS_TIENDAS FOREIGN KEY(NIF) REFERENCES TIENDAS (NIF)
);

Tabla VENTAS
– La clave primaria está formada por las columnas: NIF, ARTICULO,
COD_FABRICANTE, PESO, CATEGORIA y FECHA_VENTA.
– COD_FABRICANTE es clave ajena que referencia a la tabla FABRICANTES.
– UNIDADES_VENDIDAS ha de ser > 0.
– CATEGORIA ha de ser 'Primera', 'Segunda' o 'Tercera'.
– Las columnas ARTICULO, COD_FABRICANTE, PESO y CATEGORIA son
clave ajena y referencian a la tabla ARTICULOS. Realizar un borrado en
cascada.
– NIF es clave ajena y referencia a la tabla TIENDAS.


CREATE TABLE VENTAS2(
NIF VARCHAR2(10),
ARTICULO VARCHAR2(20),
COD_FABRICANTE NUMBER(3),
PESO NUMBER(3),
CATEGORIA VARCHAR2(10),
FECHA_VENTA DATE,
UNIDADES_VENDIDAS NUMBER(4),

CONSTRAINT PK_VENTAS2 PRIMARY KEY (NIF, ARTICULO,COD_FABRICANTE, PESO, CATEGORIA, FECHA_VENTA),

CONSTRAINT FK_VENTAS_FABRICANTES2 FOREIGN KEY(COD_FABRICANTE) REFERENCES FABRICANTES(COD_FABRICANTE),

CONSTRAINT CK_UNIDADES_VENDIDAS2 CHECK(UNIDADES_VENDIDAS > 0),

CONSTRAINT CK_CATEGORIA_VENTAS2 CHECK(CATEGORIA IN ('Primera', 'Segunda',  'Tercera')),

CONSTRAINT FK_VENTAS_ARTICULOS2 FOREIGN KEY(ARTICULO, COD_FABRICANTE, PESO, CATEGORIA) REFERENCES ARTICULOS(ARTICULO, COD_FABRICANTE, PESO, CATEGORIA)ON DELETE CASCADE,

CONSTRAINT FK_VENTAS_TIENDAS2 FOREIGN KEY(NIF) REFERENCES TIENDAS(NIF)
);

