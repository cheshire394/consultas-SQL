drop table emple;
drop table depart;

CREATE TABLE DEPART (
 DEPT_NO  NUMBER(2) PRIMARY KEY,
 DNOMBRE  VARCHAR2(14), 
 LOC      VARCHAR2(14) ) ;
 
INSERT INTO DEPART VALUES (10,'CONTABILIDAD','SEVILLA');
INSERT INTO DEPART VALUES (20,'INVESTIGACION','MADRID');
INSERT INTO DEPART VALUES (30,'VENTAS','BARCELONA');
INSERT INTO DEPART VALUES (40,'PRODUCCION','BILBAO');
COMMIT;
 
 
REM ******** TABLA EMPLE: *************
 
ALTER SESSION SET NLS_DATE_FORMAT='DD/MM/YYYY';
 
DROP TABLE EMPLE cascade constraints; 
 
CREATE TABLE EMPLE (
 EMP_NO    NUMBER(4) PRIMARY KEY,
 APELLIDO  VARCHAR2(10)  ,
 OFICIO    VARCHAR2(10)  ,
 DIR       NUMBER(4) ,
 FECHA_ALT DATE      ,
 SALARIO   NUMBER(7),
 COMISION  NUMBER(7),
 DEPT_NO   NUMBER(2) NOT NULL,
 FOREIGN KEY (DEPT_NO) REFERENCES DEPART(DEPT_NO)) ;
 
INSERT INTO EMPLE VALUES (7369,'SANCHEZ','EMPLEADO',7902,'17/12/2005',
                        1040,NULL,20);
INSERT INTO EMPLE VALUES (7499,'ARROYO','VENDEDOR',7698,'20/02/2007',
                        1500,390,30);
INSERT INTO EMPLE VALUES (7521,'SALA','VENDEDOR',7698,'22/02/2008',
                        1625,650,30);
INSERT INTO EMPLE VALUES (7566,'JIMENEZ','DIRECTOR',7839,'02/04/2008',
                        2900,NULL,20);
INSERT INTO EMPLE VALUES (7654,'MARTIN','VENDEDOR',7698,'29/09/2008',
                        1600,1020,30);
INSERT INTO EMPLE VALUES (7698,'NEGRO','DIRECTOR',7839,'01/05/2008',
                        3005,NULL,30);
INSERT INTO EMPLE VALUES (7782,'CEREZO','DIRECTOR',7839,'09/06/2005',
                        2885,NULL,10);
INSERT INTO EMPLE VALUES (7788,'GIL','ANALISTA',7566,'09/11/2007',
                        3000,NULL,20);
INSERT INTO EMPLE VALUES (7839,'REY','PRESIDENTE',NULL,'17/11/2007',
                        4100,NULL,10);
INSERT INTO EMPLE VALUES (7844,'TOVAR','VENDEDOR',7698,'08/09/2007',
                        1350,0,30);
INSERT INTO EMPLE VALUES (7876,'ALONSO','EMPLEADO',7788,'23/09/2008',
                        1430,NULL,20);
INSERT INTO EMPLE VALUES (7900,'JIMENO','EMPLEADO',7698,'03/12/2008',
                        1335,NULL,30);
INSERT INTO EMPLE VALUES (7902,'FERNANDEZ','ANALISTA',7566,'03/12/2007',
                        3000,NULL,20);
INSERT INTO EMPLE VALUES (7934,'MUNNOZ','EMPLEADO',7782,'23/01/2009',
                        1690,NULL,10);
 
COMMIT;

--1) Seleccionar los departamentos cuya localidad es Madrid.

SELECT DEPT_NO 
FROM DEPART
WHERE LOC = UPPER('MADRID');

--2) Seleccionar departamentos de Madrid o Barcelona de dos maneras distintas.

SELECT DEPT_NO
FROM DEPART
WHERE UPPER(LOC) IN (UPPER('MADRID'), UPPER('BARCELONA'));

SELECT DEPT_NO
FROM DEPART
WHERE UPPER(LOC) = UPPER('MADRID') OR UPPER(LOC) = UPPER('BARCELONA');



--3) Seleccionar empleados con oficio vendedor y que ganan más de 1500€ al mes.

SELECT APELLIDO, EMP_NO
FROM EMPLE 
WHERE UPPER(OFICIO) = UPPER('VENDEDOR') AND SALARIO > 1500;


--4) Seleccionar apellido, salario y fecha de alta de los empleados con oficio analista y del departamento 20.
SELECT APELLIDO, SALARIO,FECHA_ALT
FROM EMPLE
WHERE OFICIO LIKE ('ANALISTA') AND DEPT_NO = 20;


--5) Selecciona los empleados que no tienen jefe
SELECT DEPT_NO, APELLIDO
FROM EMPLE 
WHERE DIR IS NULL;

--6) Selecciona los empleados que tienen jefe y su salario es mayor de 12000.

SELECT APELLIDO, EMP_NO
FROM EMPLE
WHERE DIR IS NOT NULL AND SALARIO > 12000;


--7) Seleccionar apellido y oficio de los empleados que tienen más de una ‘E’ en su apellido.

SELECT APELLIDO, OFICIO
FROM EMPLE
WHERE UPPER(APELLIDO) LIKE ('%E%E%');

--8) Empleados que su apellido comienza por M, S o C o entraron a trabajar en el año 2008.
SELECT APELLIDO, OFICIO
FROM EMPLE
WHERE UPPER(APELLIDO) LIKE ('M%') 
OR UPPER(APELLIDO) LIKE ('S%') 
OR UPPER(APELLIDO) LIKE ('C%');

--9) Empleados que su apellido acaba en ‘O’ ó en la segunda posición de su apellido hay una ‘A’ o una ‘E’.
--PODEMOS UTILIZAR GUION BAJO PARA OCUPAR EL PRIMER CARACTER, LA LETRA QUE DEBE CONTENER Y % COMO AUX DEL RESTO DE CARACTERES, SINO PONER EL PORCENTAJE
--ENTONCES SOLAMENTE TE SELECCIONA LAS PABRAS QUE CONTENGAS DOS CARACTERES.
SELECT APELLIDO
FROM EMPLE
WHERE UPPER(APELLIDO) LIKE ('%O') 
OR (UPPER(APELLIDO) LIKE('_A%') OR UPPER(APELLIDO) LIKE('_E%'));

-- OTRA SOLUCICIÓN ES USAR SUBSTR , EL 2 INDICA LA POSICION DE CARACTER A EXTRAER, EL 1 INDICIA EL NUMERO DE CARACTERES QUE EXTRAEMOS.
SELECT APELLIDO
FROM EMPLE
WHERE UPPER(APELLIDO) LIKE '%O'
   OR UPPER(SUBSTR(APELLIDO, 2, 1)) IN ('A', 'E');

--10) Empleados que su apellido tiene al menos 5 letras.
SELECT APELLIDO
FROM EMPLE
WHERE LENGTH (APELLIDO) >=  5;
--11) Selecciona los empleados que trabajan en alguno de los departamentos 10, 20, 30 o 40 o los que ganen menos de 10000.
SELECT APELLIDO, DEPT_NO, SALARIO
FROM EMPLE
WHERE DEPT_NO IN('10','20','30','40')
OR SALARIO < 10000;

--12) Empleados cuyo director (campo dir) es 7839 y ganan entre 2900 y 3100 euros.
SELECT APELLIDO, DIR, SALARIO
FROM EMPLE
WHERE DIR = 7839 AND SALARIO BETWEEN 2900 AND 3100;

--13) Empleados que ganan al año (12 pagas) más de 25000€. TENER EN CUENTA NO SOLO EL SALARIO SINO LAS COMISIONES

select apellido, salario, comision
from emple
where (salario + comision) * 12 > 25000; 

-- CORRECCIÓN IMPORTANTE A TENER EN CUENTA, SI LA COMISIÓN ES NULL EN EL EJERCICIO RESUELTO POR TI, TOMARÁ EL SALARIO COMO VACÍO

-- EN ESTA CORRECIÓN SOLUCIONAMOS ESE INCOVENIENTE:
--He utilizado NVL(COMISION, 0) para tratar las comisiones nulas como 0, ya que la suma de SALARIO + NULL daría como resultado NULL, y eso podría afectar la comparación.
SELECT APELLIDO, SALARIO, COMISION
FROM EMPLE
WHERE (SALARIO + NVL(COMISION, 0)) * 12 > 25000;

--LOS VALORES NULL PUEDEN SER UN PROBLEMA A LA HORA DE CRIBAR DATOS COMO MÁXIMOS O COMO MINIMOS, EN SQL
--LA SINTASIX NVL(NOMBRE_COLUMNA, 0) PARA DAR UN VALOR DE 0 A NULL O 
---NVL(NOMBRE_COLUMNA, 999999999)PARA DAR UN VALOR MÁXIMO, PUEDE SOLUCIONAR ESTE CONFLICTO, ESTO PUEDE UTILIZARSE CUANDO NOS PIDEN ORDENAR EN DESCENDENTE (MAYOR A MENOR) 


--TODAVIA PODEMOS MEJORAR AUN MÁS ESTE EJERCICIO CREANDO UN ALIAS QUE GENERE UNA COLUMNA NUEVA(SOLO EN ESTA CONSULTA, NO EN LA TABLA REAL)  Y NOS MUESTRE EL SALARIO TOTAL EN EL SELECT
--IMPORTANTE, WHERE SE EJECUTA ANTES QUE SELECT, LO QUE SIGNIFICA QUE ESTA COLUMNA CREADA NO PUEDE USARSE EN EL WHERE.

SELECT APELLIDO, SALARIO, COMISION, SALARIO + NVL(COMISION, 0) AS SALARIO_TOTAL
FROM EMPLE
WHERE (SALARIO + NVL(COMISION, 0)) * 12 > 25000;

--14) Empleados que no tienen comisión o es menor que 400€.
select apellido, comision
from emple
where comision is null or comision < 400;


--15) Mostrar ordenado por  dentro de este por número de empleado aquellos empleados que ganan menos de 1500€ junto a una posible subida del 8%.
--EN ESTA CONSULTA ESTAMOS INTRODUCIENDO ALIAS EN LAS TABLAS PORQUE NECESITAMOS DOS TABLAS, ADEMAS ESTAMOS CREANDO UNA COLUMNA EN LA TABLA EMPLE ADICIONAL (AUMENTO_SAL).
--LOS PORCENTAJES SE CALCULAN FACILMENTE, IMAGINA UN 20% SERIA 1.20, UN 5% 1.05 ECT..
--LO MAS IMPORTANTE DEL EJERCICIO WHERE DEBE DE IR ANTES QUE ORDER BY, SINO DA FALLO.

SELECT D.DNOMBRE, D.DEPT_NO, E.APELLIDO, E.SALARIO, E.SALARIO * 1.08 AS AUMENTO_SAL
FROM EMPLE E , DEPART D 
WHERE (E.SALARIO * 1.08) < 1500
ORDER BY D.DEPT_NO, E.EMP_NO;


--16) Mostrar los empleados que no son ni directores ni presidentes y ganan más de 2800€.
SELECT APELLIDO, OFICIO, SALARIO, COMISION, SALARIO + NVL(COMISION, 0) AS SALARIO_TOTAL
FROM EMPLE
WHERE UPPER(OFICIO) NOT IN('DIRECTOR', 'PRESIDENTE') AND SALARIO + NVL(COMISION, 0) > 2800;

--17) Mostrar los empleados que son directores o analistas y pertenecen al departamento 20.
SELECT EMP_NO, APELLIDO, OFICIO
FROM EMPLE
WHERE OFICIO IN(UPPER('DIRECTOR'), UPPER('ANALISTA')) OR DEPT_NO = 20;


--18) Selecciona todos los empleados que se contrataron a lo largo de todo el año 2005 (ten en cuenta el formato de las fechas)
--TO_CHAR ES UNA FORMA DE MODIFICAR UN FORMATO DE FECHA PARA EXTRAER INFROMACION DE UNA PARTE ESPECIFICA.
SELECT EMP_NO, APELLIDO, FECHA_ALT
FROM EMPLE
WHERE TO_CHAR(FECHA_ALT, 'YYYY') = 2005;



--19) Supuesto que el sueldo de los empleados está en €, selecciona el identificador, nombre, apellidos y sueldo en pesetas para cada uno de los empleados
--poniendo como alias de la columna “salario_pesetas”. 1 euro = 166,386 pesetas.
SELECT EMP_NO,APELLIDO, (SALARIO + NVL(COMISION,0)) * 166,386 AS SALARIO_PESETAS
FROM EMPLE;



--TABLA ALUMNOS, NOTAS Y ASIGNATURAS



REM ******** TABLAS ALUMNOS, ASIGNATURAS, NOTAS: ***********
 
DROP TABLE ALUMNOS cascade constraints;
 
CREATE TABLE ALUMNOS
(
  DNI VARCHAR2(10) PRIMARY KEY,
  APENOM VARCHAR2(30),
  DIREC VARCHAR2(30),
  POBLA  VARCHAR2(15),
  TELEF  VARCHAR2(10)  
) ;
 
DROP TABLE ASIGNATURAS cascade constraints;
 
CREATE TABLE ASIGNATURAS
(
  COD NUMBER(2) PRIMARY KEY,
  NOMBRE VARCHAR2(25)
) ;
 
DROP TABLE NOTAS cascade constraints;
 
CREATE TABLE NOTAS
(
  DNI VARCHAR2(10) NOT NULL,
  COD NUMBER(2) NOT NULL,
  NOTA NUMBER(2),
  PRIMARY KEY(DNI,COD),
  FOREIGN KEY (DNI) REFERENCES ALUMNOS(DNI),
  FOREIGN KEY (COD) REFERENCES ASIGNATURAS(COD)
) ;
 
INSERT INTO ASIGNATURAS VALUES (1,'Programacion');
INSERT INTO ASIGNATURAS VALUES (2,'BBDD');
INSERT INTO ASIGNATURAS VALUES (3,'Marcas');
INSERT INTO ASIGNATURAS VALUES (4,'Sistemas');
 
 
 
INSERT INTO ALUMNOS VALUES
('12344345','Alcalde Garcia, Elena', 'C/Las Matas, 24','Madrid','917766545');
 
INSERT INTO ALUMNOS VALUES
('4448242','Cerrato Vela, Luis', 'C/Mina 28 - 3A', 'Madrid','916566545');
 
INSERT INTO ALUMNOS VALUES
('56882942','Diaz Fernandez, Maria', 'C/Luis Vives 25', 'Mostoles','915577545');
 
INSERT INTO ALUMNOS VALUES
('2112212','Sanz Martin, Roberto', 'C/Espronceda 89', 'Madrid','914431211');
 
INSERT INTO NOTAS VALUES('12344345', 1,6);
INSERT INTO NOTAS VALUES('12344345', 2,5);
INSERT INTO NOTAS VALUES('12344345', 3,6);
INSERT INTO NOTAS VALUES('12344345', 4,6);
 
INSERT INTO NOTAS VALUES('4448242', 1,6);
INSERT INTO NOTAS VALUES('4448242', 2,8);
INSERT INTO NOTAS VALUES('4448242', 3,4);
INSERT INTO NOTAS VALUES('4448242', 4,5);
 
INSERT INTO NOTAS VALUES('56882942', 1,8);
INSERT INTO NOTAS VALUES('56882942', 2,7);
INSERT INTO NOTAS VALUES('56882942', 3,8);
INSERT INTO NOTAS VALUES('56882942', 4,9);
 
INSERT INTO NOTAS VALUES('2112212', 1,3);
INSERT INTO NOTAS VALUES('2112212', 2,3);
INSERT INTO NOTAS VALUES('2112212', 3,2);
INSERT INTO NOTAS VALUES('2112212', 4,6);
COMMIT;
 
REM ******** FIN ***********************


--1) Seleccionar nombre y teléfono de los alumnos cuyo teléfono tiene más de un 5.
SELECT A.APENOM, A.TELEF
FROM ALUMNOS A, NOTAS N
WHERE N.NOTA  > 5;
--2) Mostrar el DNI (sin repetir) de los alumnos que han sacado al menos un 6 en alguna nota

SELECT DISTINCT A.DNI, N.NOTA
FROM ALUMNOS A, NOTAS N
WHERE N.NOTA >= '6';


3) Mostrar los alumnos que no son de Madrid.

--UTILIZANDO <>
SELECT DNI, APENOM, POBLA
FROM ALUMNOS
WHERE UPPER(POBLA) <> UPPER('MADRID');


--UTILIZANDO !=
SELECT DNI, APENOM, POBLA
FROM ALUMNOS
WHERE UPPER(POBLA) != UPPER('MADRID');

--USANDO LIKE...ES IGUAL PARA NOT IN
SELECT DNI, APENOM, POBLA
FROM ALUMNOS
WHERE UPPER(POBLA) NOT LIKE UPPER('MADRID');



--4) Mostrar los códigos de asignaturas que han obtenido algún suspenso o han tenido un 9.
--Utilizo un JOIN para relacionar la tabla ASIGNATURAS con la tabla NOTAS basándonos en el código de asignatura (COD).

SELECT DISTINCT ASI.COD, ASI.NOMBRE
FROM ASIGNATURAS ASI
JOIN NOTAS N ON ASI.COD = N.COD
WHERE N.NOTA < 5 OR N.NOTA = 9;

 

--5) Mostrar como quedarían las notas suspensas si les subiéramos un punto.

SELECT ASI.COD, ASI.NOMBRE,N.NOTA, N.NOTA +1 AS NUEVA_NOTA
FROM ASIGNATURAS ASI
JOIN NOTAS N ON ASI.COD = N.COD
WHERE N.NOTA < 5;
















